" Default location: ~/.vimrc
" Pathogen package manager
execute pathogen#infect()


" ------------------------------------------------------------------------------
" --------------------------------- Key bindings -------------------------------
" ------------------------------------------------------------------------------

" New line without insert
nnoremap <leader>o o<Esc>k
nnoremap <leader>O O<ESC>j

" Split switches
nnoremap <C-j> <C-W><C-J>
nnoremap <C-k> <C-W><C-K>
nnoremap <C-h> <C-W><C-H>
nnoremap <C-l> <C-W><C-L>

" Ctrl+s for saving
nnoremap <C-s> :w<Enter>

" Keybinding for yanking and pasting from system keyboard
noremap <leader>p "+p
noremap <leader>P "+P
noremap <leader>y "+y

" resize horizontal splits
nnoremap <C-S-r>p :res +5<CR>
nnoremap <C-S-r>m :res -5<CR>

"resize vertical splits
nnoremap <C-r>p :vertical resize +5<CR>
nnoremap <C-r>m :vertical resize -5<CR>

" change register leader key
nnoremap <space> "



" ------------------------------------------------------------------------------
" ---------------------------------- Plugins -----------------------------------
" ------------------------------------------------------------------------------

" Airline
set laststatus=2 " show always

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g_ctrlp_working_path_mode = 'ra'

" Table Mode
let g:table_mode_header_fillchar= '-'
let g:table_mode_corner="|"
nnoremap <leader>tmr :TableModeRealign<CR>

" Vim-Latex
filetype plugin on
set grepprg=grep\ -nH\ $*
filetype indent on
let g:tex_flavor='latex'
nmap <C-Space> <Plug>Tex_FastEnvironmentInsert 
imap <S-CR> <Plug>IMAP_JumpForward
nmap <S-CR> <Plug>IMAP_JumpForward
vmap <S-CR> <Plug>IMAP_JumpForward

" SimpylFold
let g:SimpylFold_docstring_preview=1

" UltiSnips
let g:UltiSnipsExpandTrigger = "<C-e>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<S-tab>"

" YouCompleteMe
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<tab>'
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
nnoremap <C-A-d> :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <C-A-r> :YcmCompleter GoToReferences<CR>
let g:EclimCompletionMethod = 'omnifunc' " Use omnifunc for completion

" autoformat
noremap <C-A-l> :Autoformat<CR>

" python-import
let g:PythonAutoAddImports = 1 " Autocomplete

" vim-router
let g:rooter_change_directory_for_non_project_files = 'current'



" ------------------------------------------------------------------------------
" --------------------------------- General ------------------------------------
" ------------------------------------------------------------------------------
" turn off compat mode for vi
set nocompatible 

" syntax highlighting
syntax on 

" spell check
set spell

" (relative) line numbers
set number
set relativenumber

" Indent configuration
filetype plugin indent on
set tabstop=4
set shiftwidth=0
set smarttab
set expandtab
set autoindent
set breakindent

" Search
set ignorecase
set smartcase



" ------------------------------------------------------------------------------
" ---------------------------------- Appearance --------------------------------
" ------------------------------------------------------------------------------
" Good color alts: monokai (sublime default), one (atom default), OceanicNext
set t_Co=256
colo neodark
hi Normal ctermbg=none



" ------------------------------------------------------------------------------
" ------------------------------- Functions ------------------------------------
" ------------------------------------------------------------------------------
function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()
